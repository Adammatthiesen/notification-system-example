---
/**
 * NotificationPanel.astro
 * 
 * A pop-out notification panel component for Astro-based CMS systems.
 * 
 * Props:
 * - userId: Current user's ID (required)
 * - userRole: Current user's role - 'admin', 'editor', or 'user' (required)
 * - position: Panel position - 'right' or 'left' (default: 'right')
 * - maxHeight: Maximum panel height (default: '80vh')
 * 
 * Features:
 * - Role-based notification filtering
 * - Individual notification dismissal
 * - Smooth slide-in/out animations
 * - Responsive design
 * - Accessible keyboard navigation
 * 
 * Usage:
 * <NotificationPanel userId={user.id} userRole={user.role} />
 */

export interface Props {
  userId: string;
  userRole: 'admin' | 'editor' | 'user';
  position?: 'right' | 'left';
  maxHeight?: string;
}

const { 
  userId, 
  userRole, 
  position = 'right',
  maxHeight = '80vh'
} = Astro.props;

// Validate required props
if (!userId || !userRole) {
  throw new Error('NotificationPanel requires userId and userRole props');
}
---

<!-- Notification Bell Button -->
<div class="notification-trigger">
  <button
    id="notification-bell"
    class="notification-bell"
    aria-label="Open notifications"
    aria-expanded="false"
    aria-controls="notification-panel"
    data-user-id={userId}
    data-user-role={userRole}
  >
    <svg 
      class="bell-icon" 
      width="24" 
      height="24" 
      viewBox="0 0 24 24" 
      fill="none" 
      stroke="currentColor" 
      stroke-width="2"
      aria-hidden="true"
    >
      <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>
      <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
    </svg>
    <span class="notification-badge" id="notification-count" aria-live="polite">0</span>
  </button>
</div>

<!-- Notification Panel -->
<aside
  id="notification-panel"
  class={`notification-panel notification-panel-${position}`}
  role="dialog"
  aria-labelledby="panel-title"
  aria-modal="false"
  data-position={position}
  style={`max-height: ${maxHeight};`}
>
  <div class="notification-panel-header">
    <h2 id="panel-title" class="panel-title">Notifications</h2>
    <button
      id="close-panel"
      class="close-button"
      aria-label="Close notifications panel"
    >
      <svg 
        width="20" 
        height="20" 
        viewBox="0 0 24 24" 
        fill="none" 
        stroke="currentColor" 
        stroke-width="2"
        aria-hidden="true"
      >
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  </div>

  <div class="notification-panel-body">
    <!-- Loading State -->
    <div id="loading-state" class="loading-state" aria-live="polite">
      <div class="loading-spinner"></div>
      <p>Loading notifications...</p>
    </div>

    <!-- Error State -->
    <div id="error-state" class="error-state" style="display: none;" role="alert">
      <svg 
        class="error-icon" 
        width="48" 
        height="48" 
        viewBox="0 0 24 24" 
        fill="none" 
        stroke="currentColor" 
        stroke-width="2"
      >
        <circle cx="12" cy="12" r="10"></circle>
        <line x1="12" y1="8" x2="12" y2="12"></line>
        <line x1="12" y1="16" x2="12.01" y2="16"></line>
      </svg>
      <p class="error-message">Failed to load notifications</p>
      <button id="retry-button" class="retry-button">Retry</button>
    </div>

    <!-- Empty State -->
    <div id="empty-state" class="empty-state" style="display: none;">
      <svg 
        class="empty-icon" 
        width="64" 
        height="64" 
        viewBox="0 0 24 24" 
        fill="none" 
        stroke="currentColor" 
        stroke-width="2"
      >
        <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>
        <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
      </svg>
      <p class="empty-message">No notifications</p>
      <p class="empty-submessage">You're all caught up!</p>
    </div>

    <!-- Notifications List -->
    <div id="notifications-list" class="notifications-list" style="display: none;">
      <!-- Notifications will be dynamically inserted here -->
    </div>
  </div>
</aside>

<!-- Overlay -->
<div id="notification-overlay" class="notification-overlay"></div>

<style>
  /* Notification Bell Button */
  .notification-trigger {
    position: relative;
    display: inline-block;
  }

  .notification-bell {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 44px;
    height: 44px;
    border: none;
    background: transparent;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.1s ease;
  }

  .notification-bell:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }

  .notification-bell:active {
    transform: scale(0.95);
  }

  .notification-bell:focus-visible {
    outline: 2px solid #0066cc;
    outline-offset: 2px;
  }

  .bell-icon {
    color: #333;
    transition: color 0.2s ease;
  }

  .notification-bell:hover .bell-icon {
    color: #0066cc;
  }

  .notification-badge {
    position: absolute;
    top: 6px;
    right: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 18px;
    height: 18px;
    padding: 0 4px;
    background-color: #dc3545;
    color: white;
    font-size: 11px;
    font-weight: 600;
    border-radius: 9px;
    border: 2px solid white;
    opacity: 0;
    transform: scale(0);
    transition: opacity 0.2s ease, transform 0.2s ease;
  }

  .notification-badge.has-notifications {
    opacity: 1;
    transform: scale(1);
  }

  /* Notification Panel */
  .notification-panel {
    position: fixed;
    top: 0;
    width: 400px;
    height: 100vh;
    background: white;
    box-shadow: -2px 0 16px rgba(0, 0, 0, 0.1);
    transform: translateX(100%);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1000;
    display: flex;
    flex-direction: column;
  }

  .notification-panel-right {
    right: 0;
  }

  .notification-panel-left {
    left: 0;
    transform: translateX(-100%);
    box-shadow: 2px 0 16px rgba(0, 0, 0, 0.1);
  }

  .notification-panel.open {
    transform: translateX(0);
  }

  .notification-panel-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px;
    border-bottom: 1px solid #e5e7eb;
    background: white;
    position: sticky;
    top: 0;
    z-index: 10;
  }

  .panel-title {
    margin: 0;
    font-size: 20px;
    font-weight: 600;
    color: #111827;
  }

  .close-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border: none;
    background: transparent;
    border-radius: 6px;
    cursor: pointer;
    color: #6b7280;
    transition: background-color 0.2s ease, color 0.2s ease;
  }

  .close-button:hover {
    background-color: #f3f4f6;
    color: #111827;
  }

  .close-button:focus-visible {
    outline: 2px solid #0066cc;
    outline-offset: 2px;
  }

  .notification-panel-body {
    flex: 1;
    overflow-y: auto;
    padding: 0;
  }

  /* Loading State */
  .loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 60px 20px;
    color: #6b7280;
  }

  .loading-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid #e5e7eb;
    border-top-color: #0066cc;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    margin-bottom: 16px;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  /* Error State */
  .error-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 60px 20px;
    color: #dc3545;
  }

  .error-icon {
    margin-bottom: 16px;
    color: #dc3545;
  }

  .error-message {
    margin: 0 0 16px 0;
    font-size: 16px;
    font-weight: 500;
  }

  .retry-button {
    padding: 8px 16px;
    background-color: #0066cc;
    color: white;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .retry-button:hover {
    background-color: #0052a3;
  }

  /* Empty State */
  .empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 60px 20px;
    color: #6b7280;
  }

  .empty-icon {
    margin-bottom: 16px;
    opacity: 0.4;
  }

  .empty-message {
    margin: 0 0 8px 0;
    font-size: 18px;
    font-weight: 600;
    color: #111827;
  }

  .empty-submessage {
    margin: 0;
    font-size: 14px;
  }

  /* Notifications List */
  .notifications-list {
    padding: 0;
  }

  /* Overlay */
  .notification-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    z-index: 999;
  }

  .notification-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  /* Responsive Design */
  @media (max-width: 480px) {
    .notification-panel {
      width: 100%;
    }
  }
</style>